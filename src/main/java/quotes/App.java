/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes;

import com.google.gson.Gson;
import com.google.gson.JsonStreamParser;
import netscape.javascript.JSObject;

import java.io.*;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Arrays;

public class App {
    public static void main(String[] args) {

        getAPIQuote();

    }

    public static String getLocalQuote() {

      Gson gson = new Gson();
      Quote[] quote = null;

      try {
        File file = new File("assets/recentquotes.json");
        FileReader reader = new FileReader(file);
        quote = gson.fromJson(reader, Quote[].class);
      } catch (FileNotFoundException e) {
        System.out.println("file not found " + e);
      }

      int quoteNum = (int) (Math.random() * quote.length);
      String returnQuote = "Author: " + quote[quoteNum].author + "\n" + "Quote: " + quote[quoteNum].text;
      return returnQuote;
    }

    public static String getAPIQuote() {

        Gson gson = new Gson();
        URL url = null;
        APIQuote quoteFromAPI = null;

        try {
            url = new URL("https://favqs.com/api/qotd");
        } catch (MalformedURLException e) {
            System.out.println("bad url");
        }
        try {
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            BufferedReader in = new BufferedReader(
                    new InputStreamReader(connection.getInputStream()));
            String currentline = in.readLine();
            while (currentline != null) {

                quoteFromAPI = gson.fromJson(currentline, APIQuote.class);
                System.out.println(quoteFromAPI);

                saveAPIQuoteToJSON(quoteFromAPI);

                currentline = in.readLine();
            }
        } catch (IOException e) {
            System.out.println("Offline - printing local quote.");
            System.out.println(getLocalQuote());
        }
        return quoteFromAPI.toString();
    }

    public static void saveAPIQuoteToJSON(APIQuote quoteFromAPI) throws IOException {
        Gson gson = new Gson();

        File file = new File("assets/recentquotes.json");
        FileReader reader = new FileReader(file);
        Quote[] quotes = gson.fromJson(reader, Quote[].class);
        Quote[] newQuotes = Arrays.copyOf(quotes, quotes.length +1);

        Quote newQuote = new Quote(quoteFromAPI);
        newQuotes[newQuotes.length -1] = newQuote;

        FileWriter writer = new FileWriter("assets/recentquotes.json");
        writer.write(gson.toJson(newQuotes));
        writer.close();
    }

}
